{"version":3,"sources":["../source/server.js"],"names":[],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;AAGA,IAAM,UAAU,uBAAhB;;;AAGA,QAAQ,GAAR,CAAY,kBAAQ,MAAR,CAAe,eAAK,IAAL,CAAU,SAAV,EAAqB,WAArB,CAAf,EAAkD;AAC5D,SAAO;AADqD,CAAlD,CAAZ;;;AAKA,QAAQ,GAAR,CAAY,UAAZ,EAAwB,UAAS,GAAT,EAAc,GAAd,EAAmB,IAAnB,EAAyB;AAC/C,MAAI,IAAJ,CAAS;AACP,aAAS;AADF,GAAT;AAGD,CAJD;;;AAOA,QAAQ,GAAR,CAAY,GAAZ,EAAiB,UAAS,GAAT,EAAc,GAAd,EAAmB,IAAnB,EAAyB;;;AAGxC,MAAI,QAAQ,wBAAY,EAAZ,CAAZ;;;AAGA,MAAI,SAAS;AACX,iBAAa,MAAM;AADR,GAAb;;;AAKA,8CAAe,+CAAK,OAAO,KAAZ,GAAf,EAAsC,MAAtC,EAA8C,oBAA9C,EAAoE,UAAC,GAAD,EAAM,IAAN,EAAe;AACjF,QAAI,GAAJ,EAAS;AACP,aAAO,KAAK,GAAL,CAAP;AACD;;AAED,QAAI,IAAJ,CAAS,IAAT;AACD,GAND;AAOD,CAlBD;;;AAqBA,QAAQ,MAAR,CAAe,IAAf","file":"server.js","sourcesContent":["import Express from 'express';\nimport React from 'react';\nimport path from 'path';\nimport Freezer from 'freezer-js';\nimport { serverRenderer } from 'react-universal-renderer';\nimport App from './App';\n\n\nconst express = new Express();\n\n// Build client.js script here\nexpress.use(Express.static(path.join(__dirname, '../public'), {\n  index: false\n}));\n\n// Something to fetch async\nexpress.get('/message', function(req, res, next) {\n  res.json({\n    message: 'Hello from an async request!'\n  });\n});\n\n// Render React App\nexpress.get('*', function(req, res, next) {\n\n  // Setup a store, the initial state of the store should be the same on the server and client.\n  let store = new Freezer({});\n\n  // Tell the server what and how to load state into the client, in this case just call get on the store which will set `window.__FREEZER=store.get()`\n  let states = {\n    '__FREEZER': store.get\n  };\n\n  // Tell the server how to load the client script\n  serverRenderer(<App store={store} />, states, '/scripts/client.js', (err, html) => {\n    if (err) {\n      return next(err);\n    }\n\n    res.send(html);\n  });\n});\n\n// Run the server\nexpress.listen(8080);\n"]}